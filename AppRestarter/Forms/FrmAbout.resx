<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>App Restarter is an application written by Nikolas Andreou.
The main purpose of this software is to enable application
monitoring and restarting, customizable to the bone.

App Restarter allows you to customize when your application
will be checked to determine if it's running and after how much
time it will be restarted. Additionally, you can enable logging to
monitor App Restarter's progress. 

App Restarter supports 3 different ways of process spawning
at the moment. You can restart your process by simply running
it as if you double clicked the executable file, run your executable
file inside a command line or runcommand line statements directly. 

You can check out the development progress of App Restarter on
GitHub by clicking on the URL below. Feel free to open issues or
contribute your own code. App Restarter is an open-source software.</value>
  </data>
</root>